import{r as a,j as t,d as o}from"./app-CmMHBtRm.js";const g=({webSocket:r,auth:l})=>{const[s,n]=a.useState(null),i=a.useRef();return a.useEffect(()=>{try{r.send(JSON.stringify({type:"unityStat",message:"isUnity Running",data:l})),r.addEventListener("message",c=>{try{const e=JSON.parse(c.data);try{e.type==="login"&&e.message==="unity instanceRunning"&&(console.log("Recive : ",e),n(e.data.client),i.current=e.data),e.type==="auth"&&(console.log("Recive : ",e),n(e.data.user._id),i.current=e.data),e.type==="unityInstanceOff"&&(console.log("Recive : ",e),n(null))}catch{console.log("Error:",{error:"Message not from unity.."})}}catch{console.log("Error:",{error:"Message Parsing faild.."})}})}catch{return}},[r]),t.jsx(o,{href:route("dashboard"),children:t.jsx("div",{className:"p-4 rounded-md shadow-md h-full w-full block relative flex flex-col justify-center text-center",children:s?t.jsxs(t.Fragment,{children:[t.jsxs("h2",{className:"dark:text-gray-200 uppercase",children:["Unity ON ",s._id||s]}),t.jsx("img",{src:"unityrunning.gif",alt:"unityGlitch",className:"rounded-md"})]}):t.jsxs(t.Fragment,{children:[t.jsx("h2",{className:"dark:text-gray-200 uppercase",children:"Unity NO Signal"}),t.jsx("img",{src:"unityGlitch.gif",alt:"unityGlitch",className:"rounded-md"})]})})})};export{g as default};
